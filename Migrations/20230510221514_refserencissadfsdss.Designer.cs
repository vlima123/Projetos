// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoParaProjetos.context;

#nullable disable

namespace ProjetoParaProjetos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230510221514_refserencissadfsdss")]
    partial class refserencissadfsdss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoParaProjetos.Models.FlashCard", b =>
                {
                    b.Property<int>("FlashCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NotaId")
                        .HasColumnType("int");

                    b.Property<int>("ObjetivosId")
                        .HasColumnType("int");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FlashCardId");

                    b.HasIndex("NotaId");

                    b.HasIndex("ObjetivosId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("FlashCards");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Nota", b =>
                {
                    b.Property<int>("NotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRevisao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ObjetivosId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<bool>("Revisao")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("NotaId");

                    b.HasIndex("ObjetivosId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Objetivos", b =>
                {
                    b.Property<int>("ObjetivosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ObjetivosId");

                    b.ToTable("Objetivos");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Atualiacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ObjetivosId")
                        .HasColumnType("int");

                    b.Property<string>("Selos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProjetoId");

                    b.HasIndex("ObjetivosId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Referencia", b =>
                {
                    b.Property<int>("ReferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FlashCardId")
                        .HasColumnType("int");

                    b.Property<int>("ReferenciaTipo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ReferenciaId");

                    b.HasIndex("FlashCardId");

                    b.ToTable("Referencias");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.SeloAprendizado", b =>
                {
                    b.Property<int>("SeloAprendizadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SeloAprendizadoId");

                    b.ToTable("SelosAprendizado");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Tarefa", b =>
                {
                    b.Property<int>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TarefaId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.FlashCard", b =>
                {
                    b.HasOne("ProjetoParaProjetos.Models.Nota", null)
                        .WithMany("FlashCards")
                        .HasForeignKey("NotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoParaProjetos.Models.Objetivos", null)
                        .WithMany("FlashCards")
                        .HasForeignKey("ObjetivosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoParaProjetos.Models.Projeto", null)
                        .WithMany("FlashCards")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Nota", b =>
                {
                    b.HasOne("ProjetoParaProjetos.Models.Objetivos", "Objetivos")
                        .WithMany()
                        .HasForeignKey("ObjetivosId");

                    b.HasOne("ProjetoParaProjetos.Models.Projeto", "Projeto")
                        .WithMany("Notas")
                        .HasForeignKey("ProjetoId");

                    b.Navigation("Objetivos");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Projeto", b =>
                {
                    b.HasOne("ProjetoParaProjetos.Models.Objetivos", "Objetivo")
                        .WithMany()
                        .HasForeignKey("ObjetivosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objetivo");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Referencia", b =>
                {
                    b.HasOne("ProjetoParaProjetos.Models.FlashCard", "FlashCard")
                        .WithMany()
                        .HasForeignKey("FlashCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlashCard");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Nota", b =>
                {
                    b.Navigation("FlashCards");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Objetivos", b =>
                {
                    b.Navigation("FlashCards");
                });

            modelBuilder.Entity("ProjetoParaProjetos.Models.Projeto", b =>
                {
                    b.Navigation("FlashCards");

                    b.Navigation("Notas");
                });
#pragma warning restore 612, 618
        }
    }
}
